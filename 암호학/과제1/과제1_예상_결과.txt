  1 ========== 기본 gcd 시험 ==========
  2 gcd(28,0) = 28
  3 gcd(0,32) = 32
  4 gcd(41370,22386) = 42
  5 gcd(22386,41371) = 1
  6 ========== 기본 xgcd, mul_inv 시험 ==========
  7 42 = 41370 * -204 + 22386 * 377
  8 41370^-1 mod 22386 = 0, 22386^-1 mod 41370 = 0
  9 1 = 41371 * 4285 + 22386 * -7919
 10 41371^-1 mod 22386 = 4285, 22386^-1 mod 41371 = 33452
 11 ========== 무작위 xgcd, mul_inv 시험 ==========
 12 ............................................................................................    ............................................................................................    .............................................................................PASSED
 13 ========== 기본 GF(2^16) a*b 시험 ==========
 14 3 * 7 = 9
 15 65535 * 12345 = 41504
 16 ========== 전체 GF(2^16) a*b 시험 ==========
 17 ............................................................................................    ............................................................................................    ..............................................................................PASSED
 18 ========== 기본 umul_inv 시험 ==========
 19 a = 5, m = 9223372036854775808, a^-1 mod m = 5534023222112865485.....PASSED
 20 a = 17, m = 9223372036854775808, a^-1 mod m = 8138269444283625713.....PASSED
 21 a = 85, m = 9223372036854775808, a^-1 mod m = 9006351518340545789.....PASSED
 22 ========== 무작위 umul_inv 시험 ==========
 23 ............................................................................................    ............................................................................................    .............................................................................PASSED


     int d0 = a, d1 = m;
     int x0 = 1, x1 = 0, q, tem;
     bool isNx0 = false, isNx1 = false;
     
     while (d1 > 1){
         q = d0 / d1; 
         tem = d0 - q * d1; 
         d0 = d1; 
         d1 = tem;
         
         tem = x0 - q * x1; 
         x0 = x1; 
         x1 = tem;
     }
      
     if (d1 == 1){
         return (x1 > 0 ? x1 : x1 + m);
     }
     else
         return 0;
